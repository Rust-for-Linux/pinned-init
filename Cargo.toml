[package]
name = "pin-init"
version = "0.0.9"
edition = "2021"

authors = ["y86-dev"]
license = "MIT OR Apache-2.0"
description = "Library to facilitate safe pinned initialization"
readme = "README.md"

documentation = "https://docs.rs/pin-init"
repository = "https://github.com/Rust-for-Linux/pin-init"
keywords = ["safe", "pin", "init", "no-std", "rust-patterns"]
categories = ["no-std", "rust-patterns", "embedded"]

[dependencies]
paste = "1.0"
pin-init-internal = { path = "./internal", version = "=0.0.5" }

[features]
default = ["std", "alloc"]
std = []
alloc = []

[build-dependencies]
rustc_version = "0.4"

[dev-dependencies]
libc = "0.2"
trybuild = { version = "1.0", features = ["diff"] }
macrotest = "1.0"
# needed for macrotest, have to enable verbatim feature to be able to format `&raw` expressions.
prettyplease = { version = "0.2", features = ["verbatim"] }

[lints.rust]
non_ascii_idents = "deny"
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(NO_UI_TESTS)', 'cfg(NO_ALLOC_FAIL_TESTS)', 'cfg(kernel)'] }
unsafe_op_in_unsafe_fn = "deny"
unused_attributes = "deny"
warnings = "deny"

[lints.rustdoc]
missing_crate_level_docs = "deny"
unescaped_backticks = "deny"

[lints.clippy]
# allow this until the modules in examples/ and tests/ are cleaned up
duplicate_mod = "allow"

ignored_unit_patterns = "deny"
mut_mut = "deny"
needless_bitwise_bool = "deny"
needless_continue = "deny"
needless_lifetimes = "deny"
no_mangle_with_rust_abi = "deny"
undocumented_unsafe_blocks = "deny"
unnecessary_safety_comment = "deny"
unnecessary_safety_doc = "deny"
